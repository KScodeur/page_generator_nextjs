"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/projects/page",{

/***/ "(app-pages-browser)/./components/projects/ProjectActions.tsx":
/*!************************************************!*\
  !*** ./components/projects/ProjectActions.tsx ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* __next_internal_client_entry_do_not_use__  auto */  // interface ProjectActionsProps {\n //   project: Project;\n //   onUpdate: () => void;\n // }\n // export function ProjectActions({ project, onUpdate }: ProjectActionsProps) {\n //   const router = useRouter();\n //   const [isLoading, setIsLoading] = useState(false);\n //   const handleAction = async (action: 'start' | 'pause' | 'stop' | 'delete') => {\n //     if (action === 'delete' && !confirm('Are you sure you want to delete this project?')) {\n //       return;\n //     }\n //     try {\n //         setIsLoading(true);\n //         if (action === 'delete') {\n //           await deleteProject(project.id);\n //           router.push('/projects');\n //         } else {\n //           await updateProjectStatus(project.id, action);\n //           onUpdate();\n //         }\n //       } catch (error) {\n //         console.error(`Failed to ${action} project:`, error);\n //         alert(error instanceof Error ? error.message : `Failed to ${action} project`);\n //       } finally {\n //         setIsLoading(false);\n //       }\n //     };\n //   const handleExport = async () => {\n //     try {\n //       setIsLoading(true);\n //       const response = await fetch(`/api/projects/${project.id}/export`);\n //       if (!response.ok) {\n //         throw new Error('Failed to export project');\n //       }\n //       // Get the filename from the Content-Disposition header if available\n //       const contentDisposition = response.headers.get('Content-Disposition');\n //       const filenameMatch = contentDisposition?.match(/filename=\"(.+)\"/);\n //       const filename = filenameMatch?.[1] || `${project.name.toLowerCase().replace(/[^a-z0-9]+/g, '-')}.csv`;\n //       // Create blob from response\n //       const blob = await response.blob();\n //       // Create download link\n //       const url = window.URL.createObjectURL(blob);\n //       const link = document.createElement('a');\n //       link.href = url;\n //       link.download = filename;\n //       // Trigger download\n //       document.body.appendChild(link);\n //       link.click();\n //       document.body.removeChild(link);\n //       // Cleanup\n //       window.URL.revokeObjectURL(url);\n //     } catch (error) {\n //       console.error('Failed to export project:', error);\n //       alert('Failed to export project. Please try again.');\n //     } finally {\n //       setIsLoading(false);\n //     }\n //   };\n //   return (\n //     <div className=\"flex items-center gap-2\">\n //       {project.status !== 'completed' && (\n //         <>\n //           {project.status !== 'running' && (\n //             <Button\n //               variant=\"outline\"\n //               size=\"sm\"\n //               onClick={() => handleAction('start')}\n //               disabled={isLoading}\n //               title=\"Start Generation\"\n //             >\n //               <Play className=\"w-4 h-4\" />\n //             </Button>\n //           )}\n //           {project.status === 'running' && (\n //             <Button\n //               variant=\"outline\"\n //               size=\"sm\"\n //               onClick={() => handleAction('pause')}\n //               disabled={isLoading}\n //               title=\"Pause Generation\"\n //             >\n //               <Pause className=\"w-4 h-4\" />\n //             </Button>\n //           )}\n //           <Button\n //             variant=\"outline\"\n //             size=\"sm\"\n //             onClick={() => handleAction('stop')}\n //             disabled={isLoading}\n //             title=\"Stop Generation\"\n //           >\n //             <StopCircle className=\"w-4 h-4\" />\n //           </Button>\n //         </>\n //       )}\n //       <Button\n //         variant=\"outline\"\n //         size=\"sm\"\n //         onClick={handleExport}\n //         disabled={isLoading || project.status === 'running'}\n //         title=\"Export to CSV\"\n //       >\n //         <Download className=\"w-4 h-4\" />\n //       </Button>\n //       <Link href={`/projects/${project.id}/edit`}>\n //         <Button\n //           variant=\"outline\"\n //           size=\"sm\"\n //           disabled={isLoading}\n //           title=\"Edit Project\"\n //         >\n //           <Edit className=\"w-4 h-4\" />\n //         </Button>\n //       </Link>\n //       <Button\n //         variant=\"outline\"\n //         size=\"sm\"\n //         onClick={() => handleAction('delete')}\n //         disabled={isLoading}\n //         title=\"Delete Project\"\n //         className=\"text-red-600 hover:bg-red-50 hover:border-red-200\"\n //       >\n //         <Trash2 className=\"w-4 h-4\" />\n //       </Button>\n //     </div>\n //   );\n // }\n // 'use client';\n // import { useState } from 'react';\n // import { Play, Pause, StopCircle, Download, Edit, Trash2 } from 'lucide-react';\n // import Link from 'next/link';\n // import { useRouter } from 'next/navigation';\n // import { Button } from '@/components/ui/Button';\n // import type { Project } from '@/types';\n // interface ProjectActionsProps {\n //   project: Project;\n // }\n // export function ProjectActions({ project, onUpdate }: ProjectActionsProps) {\n //   const router = useRouter();\n //   const [isLoading, setIsLoading] = useState(false);\n //   const handleAction = async (action: string) => {\n //     if (action === 'delete' && !confirm('Are you sure you want to delete this project?')) {\n //       return;\n //     }\n //     try {\n //       setIsLoading(true);\n //       const response = await fetch(`/api/projects/${project.id}/${action}`, {\n //         method: 'POST'\n //       });\n //       if (!response.ok) {\n //         const error = await response.json();\n //         throw new Error(error.error || `Failed to ${action} project`);\n //       }\n //       router.refresh();\n //     } catch (error) {\n //       console.error(`Failed to ${action} project:`, error);\n //       alert(error instanceof Error ? error.message : `Failed to ${action} project`);\n //     } finally {\n //       setIsLoading(false);\n //     }\n //   };\n //   const handleExport = async () => {\n //     try {\n //       setIsLoading(true);\n //       // Create a hidden link element\n //       const link = document.createElement('a');\n //       link.href = `/api/projects/${project.id}/export`;\n //       link.download = `${project.name.toLowerCase().replace(/[^a-z0-9]+/g, '-')}.csv`;\n //       // Add to document, click it, and remove it\n //       document.body.appendChild(link);\n //       link.click();\n //       document.body.removeChild(link);\n //     } catch (error) {\n //       console.error('Failed to export project:', error);\n //       alert('Failed to export project. Please try again.');\n //     } finally {\n //       setIsLoading(false);\n //     }\n //   };\n //   return (\n //     <div className=\"flex space-x-2\">\n //       {project.status !== 'completed' && (\n //         <>\n //           {project.status !== 'running' && (\n //             <Button\n //               variant=\"outline\"\n //               size=\"sm\"\n //               onClick={() => handleAction('start')}\n //               disabled={isLoading}\n //               title=\"Start Generation\"\n //             >\n //               <Play className=\"w-4 h-4\" />\n //             </Button>\n //           )}\n //           {project.status === 'running' && (\n //             <Button\n //               variant=\"outline\"\n //               size=\"sm\"\n //               onClick={() => handleAction('pause')}\n //               disabled={isLoading}\n //               title=\"Pause Generation\"\n //             >\n //               <Pause className=\"w-4 h-4\" />\n //             </Button>\n //           )}\n //           <Button\n //             variant=\"outline\"\n //             size=\"sm\"\n //             onClick={() => handleAction('stop')}\n //             disabled={isLoading}\n //             title=\"Stop Generation\"\n //           >\n //             <StopCircle className=\"w-4 h-4\" />\n //           </Button>\n //         </>\n //       )}\n //       <Button\n //         variant=\"outline\"\n //         size=\"sm\"\n //         onClick={handleExport}\n //         disabled={isLoading || project.status === 'running'}\n //         title=\"Export to CSV\"\n //       >\n //         <Download className=\"w-4 h-4\" />\n //       </Button>\n //       <Link href={`/projects/${project.id}/edit`}>\n //         <Button\n //           variant=\"outline\"\n //           size=\"sm\"\n //           disabled={isLoading}\n //           title=\"Edit Project\"\n //         >\n //           <Edit className=\"w-4 h-4\" />\n //         </Button>\n //       </Link>\n //       <Button\n //         variant=\"outline\"\n //         size=\"sm\"\n //         onClick={() => handleAction('delete')}\n //         disabled={isLoading}\n //         title=\"Delete Project\"\n //         className=\"text-red-600 hover:bg-red-50\"\n //       >\n //         <Trash2 className=\"w-4 h-4\" />\n //       </Button>\n //     </div>\n //   );\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/projects/ProjectActions.tsx\n"));

/***/ })

});